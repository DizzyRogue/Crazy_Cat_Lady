import random


''' Class to hold players collection of unique cats '''
class Herd:

	cat_herd = [] #Empty list that takes in new created kittens


''' Class to hold profile of attributes of a single unique cat '''	
class Cat:

	name = "Placeholder Kitty"
	sex = "Placeholder Bastard"
	age = 0
	lives = 9
	strength = 0
	agility = 0
	attack = 0
	defense = 0
	cats_to_create = 0


	''' Function to create a single unique kitten and its attributes'''
	def create_kitten(self):
		self.cats_to_create = new_litter.cats_litter_size # Assign the number of kittens generated by Litter Class to the cats_to_create variable in new instance of Cat

		while self.cats_to_create > 0:
			self.sex = "Placeholder Bastard"
			self.sex_of_kitten()
			print "====================================="
			print "Kittens in new litter: " + str(self.cats_to_create)
			print "This kitten is a " + self.sex
			self.name = raw_input("Enter your new kitten's name: ")
			self.age = 1
			self.lives = 9
			self.strength = random.randint(1, 3) # NEED TO add logic to assign starting strength
			self.agility = random.randint(1, 3) # NEED TO add logic to assign starting agility
			self.attack = random.randint(1, 3) # NEED TO add logic to assign starting attack
			self.defense = random.randint(1, 3) # NEED TO add logic to assign starting defense
			self.cats_to_create -= 1
			self.to_print()
			self.name = raw_input("Press enter to continue...")

	''' Function to determine the sex of the new kitten'''	
	def sex_of_kitten(self):
		boygirl = 0
		self.boygirl = random.randint(0, 1) # Random generator to set the kitten's sex to male or female

		''' Logic to determine if the kitten is male or female based on above random generation '''	
		if self.boygirl == 0:
			self.sex = str("Male")
		if self.boygirl == 1:
			self.sex = str("Female")	

	def to_print(self):	
		print "====================================="
		print "Cat's Name: " + new_cat.name
		print "Sex: " + new_cat.sex
		print "Age: " + str(new_cat.age)
		print "Lives: " + str(new_cat.lives)
		print "Strength: " + str(new_cat.strength)
		print "Agility: " + str(new_cat.agility)
		print "Attack: " + str(new_cat.attack)
		print "Defense: " + str(new_cat.defense)
		print "====================================="

	''' Cat Profile to hold all cat attributes'''
	cat_profile = {
		"Name": 0,
		"Sex": 0,
		"Age": 0,
		"Lives": 0,
		"Strength": 0,
		"Agility": 0,
		"Attack": 0,
		"Defense": 0,
	}



''' Class to determine how big a cat's litter will be and returns the value into the KittenCreator class '''	
class Litter:
	cats_litter_size = 0
		
	''' Random generator to set litter size to a number between 1 and 6 '''	
	def litter_size(self):
		 self.cats_litter_size = random.randint(1, 6)

'''GAME LOOP'''
new_litter = Litter()
new_litter.litter_size()
new_cat = Cat()
new_cat.create_kitten()

